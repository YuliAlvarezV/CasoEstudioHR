# -*- coding: utf-8 -*-
"""Manager.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fYJ2MZwP0_sYNz3sAjbJnFHGqQncqskh
"""

# Carga de paquetes
import pandas as pd
import matplotlib.pyplot as plt

# Carga de datos
#from google.colab import drive
#drive.mount('/content/drive')

manager = "https://raw.githubusercontent.com/YuliAlvarezV/CasoEstudioHR/main/Bases%20de%20datos/manager_survey.csv"
manager = pd.read_csv(manager)
manager

#Identificamos número de filas y columnas
manager.shape

#Eliminamos la columna Unnamed
manager = manager.drop("Unnamed: 0", axis = 1)
manager.head(10)

#Identificamos los tipos de columnas
manager.dtypes

#Identificamos las variables según el diccionario
#jobinvolvement categorico
#performancerating categorico
#surveydate fecha

#Convertimos al  tipo correcto
manager["SurveyDate"] = pd.to_datetime(manager["SurveyDate"])
manager["JobInvolvement"] = pd.Categorical(manager["JobInvolvement"])
manager["PerformanceRating"] = pd.Categorical(manager["PerformanceRating"])

#Verificamos
manager.dtypes

#Candidad de nulos por columna
manager.isnull().sum()

#duplicados
manager.duplicated().sum()

"""#**Jobinvolvement**"""

#Miramos cada categoria
manager["JobInvolvement"].value_counts()

#Gráfico de pastel
jobinvolvement = manager["JobInvolvement"].value_counts()

# Crear un diccionario de mapeo de valores originales a nuevos nombres
nuevos_nombres = {1: "Low", 2: "Medium", 3: "High", 4: "Very High"}

# Reemplazar los nombres de las etiquetas utilizando el diccionario de mapeo
jobinvolvement.index = jobinvolvement.index.map(nuevos_nombres)

# Crear un gráfico de pastel
plt.figure(figsize=(8, 8))  # Tamaño del gráfico
plt.pie(jobinvolvement, labels= jobinvolvement.index, autopct='%1.1f%%', startangle=140)  # Crear gráfico de pastel
plt.axis('equal')  # Aspecto de círculo
plt.title("Engagement of employee with company")  # Título del gráfico
plt.show()  # Mostrar el gráfico

"""#**Performancerating**"""

#Miramos cada categoria
manager["PerformanceRating"].value_counts()

#Gráfico de pastel
performancerating = manager["PerformanceRating"].value_counts()

# Crear un diccionario de mapeo de valores originales a nuevos nombres
nuevos_nombres = {3: "High", 4: "Very High"}

# Reemplazar los nombres de las etiquetas utilizando el diccionario de mapeo
performancerating.index = performancerating.index.map(nuevos_nombres)

# Crear un gráfico de pastel
plt.figure(figsize=(8, 8))  # Tamaño del gráfico
plt.pie(performancerating, labels= performancerating.index, autopct='%1.1f%%', startangle=140)  # Crear gráfico de pastel
plt.axis('equal')  # Aspecto de círculo
plt.title("Performance rating for last year provided by manager")  # Título del gráfico
plt.show()  # Mostrar el gráfico

"""#**Surveydate**"""

#Compración de los resultados cada año
agrupado = manager.groupby(manager["SurveyDate"].dt.date)["JobInvolvement"].value_counts().reset_index(name='conteo')
agrupado